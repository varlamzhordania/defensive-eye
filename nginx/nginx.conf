# nginx.conf for Django

# Define the user and group under which Nginx will run.
user nginx;
worker_processes 1;

# Set the path to the PID file.
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    sendfile on;
    keepalive_timeout 65;
    client_max_body_size 2048M;

    gzip on;
    gzip_types text/plain text/css application/json application/javascript;

    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256';

    # Enable OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # SSL session cache settings
    ssl_session_cache shared:SSL:10m;
    #ssl_session_timeout 1h;

    # Enable HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Prevents the browser from incorrectly detecting non-HTTPS traffic as HTTPS
    add_header Content-Security-Policy "upgrade-insecure-requests";

    # Enable session tickets
    ssl_session_tickets off;

    # Enable session resumption (caching of session parameters)
    ssl_session_timeout 1d;

    # Set your Django application's server name and location.
    server {
        listen 80;

        # Allow all connections or set your server_name as needed
        server_name _;

        # Root for static files (optional)
        location / {
            proxy_pass http://web:8000;  # Forward requests to the Gunicorn container
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebSocket Proxy for Daphne
        location /ws/ {
            proxy_pass http://daphne:8001;  # Forward WebSocket requests to Daphne
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
        }

        # Optionally handle static files (make sure to adjust if needed)
        location /static/ {
            alias  /app/static;  # Adjust path if necessary
        }
        location /media/ {
            alias  /app/media;  # Adjust path if necessary
        }
    }

#     # Gunicorn server for the Django backend on defensiveeyes.com
#     server {
#         listen                          443 ssl http2;
#         listen                          [::]:443 ssl http2;
#         server_name defensiveeyes.com www.defensiveeyes.com;
#
#         # SSL certificate paths
#         ssl_certificate /home/defensive-eye/cert.crt;
#         ssl_certificate_key /home/defensive-eye/private.key;
#
#         # Proxying requests to Gunicorn
#         location / {
#             proxy_pass https://web:8000;  # Use gunicorn service for API requests
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
#             add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
#         }
#
#         # Serving static files
#         location /static/ {
#             alias /home/defensive-eye/backend/staticfiles/;
#             expires 7d;
#         }
#
#         # Serving media files
#         location /media/ {
#             alias /home/defensive-eye/backend/media/;
#         }
#     }
#
#     # Daphne WebSocket server for stream.defensiveeyes.com
#     server {
#         listen                          443 ssl http2;
#         listen                          [::]:443 ssl http2;
#         server_name stream.defensiveeyes.com;
#
#         # SSL certificate paths
#         ssl_certificate /home/defensive-eye/cert.crt;
#         ssl_certificate_key /home/defensive-eye/private.key;
#
#         # WebSocket proxying to Daphne
#         location / {
#             proxy_pass http://daphne:8001;  # Daphne for WebSocket connections
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection "upgrade";
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         }
#     }

#     # Redirect HTTP to HTTPS for React app and all other subdomains
#     server {
#         listen                          80;
#         listen                          [::]:80;
#         server_name defensiveeyes.com www.defensiveeyes.com api.defensiveeyes.com stream.defensiveeyes.com;
#
#         # Redirect all HTTP traffic to HTTPS
#         return 301 https://$server_name$request_uri;
#     }

}